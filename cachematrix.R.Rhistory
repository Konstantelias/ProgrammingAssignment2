swirl()
library(swirl)
swirl()
==
TRUE==TRUE
FALSE==TRUE
(FALSE==TRUE0==FALSE
(FALSE==TRUE)==FALSE
6==7
6<7
10<=10
5!=7
5!=7
5==7
!5==7
FALSE&FALSE
TRUE&c(TRUE,FALSE,FALSE)
TRUE&&c(TRUE,FALSE,FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE | | c(TRUE, FALSE, FALSE)
q()
library(swirl)
swirl()
submit()
submit()
telegram
telegram()
q()
makeCacheMatrix <- function(x = matrix()) {
    i <- NULL
  set <- function(y) {
          x <<- y
          i <<- NULL
  }
  get <- function() x
  setinverse <- function(inverse) i <<- inverse
  getinverse <- function() i
  list(set = set,
       get = get,
       setinverse = setinverse,
       getinverse = getinverse)
}
cacheSolve <- function(x, ...) {
  i <- x$getinverse()
  if (!is.null(i)) {
          message("getting cached data")
          return(i)
  }
  data <- x$get()
  i <- solve(data, ...)
  x$setinverse(i)
  i
}
B <- matrix(c(1,2,3,4),2,2)
B1 <- makeCacheMatrix(B)
cacheSolve(B1)
cacheSolve(B1)
save.image("C:\\Users\\Research\\Downloads\\cachematrix.RData")
save.image("C:\\Users\\Research\\Desktop\\cachematrix.RData")
